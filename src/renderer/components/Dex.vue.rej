diff a/src/renderer/components/Dex.vue b/src/renderer/components/Dex.vue	(rejected hunks)
@@ -47,6 +47,37 @@ export default {
     DexDemoConfirmation,
   },
 
+  beforeMount() {
+    this.$store.state.showPortfolioHeader = false;
+    this.$store.dispatch('fetchMarkets', {
+      done: () => {
+        if (!this.$store.state.currentMarket) {
+          this.$store.commit('setCurrentMarket', this.$store.state.markets[0]);
+        }
+      },
+    });
+
+    this.$services.dex.completeSystemAssetWithdrawals();
+
+    this.$store.state.socket.opened = () => {
+      if (this.$store.state.currentMarket) {
+        this.$store.dispatch('subscribeToMarket', {
+          market: this.$store.state.currentMarket,
+        });
+      }
+    };
+
+    this.$store.state.socket.orderCreated = (message) => {
+      /* eslint-disable max-len */
+      this.$services.alerts.success(`${(message.side === 'bid' ? 'Buy' : 'Sell')} Order Created. x${message.data.quantity} @${message.data.price}`);
+    };
+
+    this.$store.state.socket.orderMatched = (message) => {
+      /* eslint-disable max-len */
+      this.$services.alerts.success(`${(message.side === 'bid' ? 'Buy' : 'Sell')} Order Filled. x${message.data.quantity} @${message.data.price}`);
+    };
+  },
+
   created() {
     this.setConnected();
     this.interval = setInterval(() => {
@@ -82,37 +113,6 @@ export default {
       this.connected = true;
     },
   },
-
-  mounted() {
-    this.$store.state.showPortfolioHeader = false;
-    this.$store.dispatch('fetchMarkets', {
-      done: () => {
-        if (!this.$store.state.currentMarket) {
-          this.$store.commit('setCurrentMarket', this.$store.state.markets[0]);
-        }
-      },
-    });
-
-    this.$services.dex.completeSystemAssetWithdrawals();
-
-    this.$store.state.socket.opened = () => {
-      if (this.$store.state.currentMarket) {
-        this.$store.dispatch('subscribeToMarket', {
-          market: this.$store.state.currentMarket,
-        });
-      }
-    };
-
-    this.$store.state.socket.orderCreated = (message) => {
-      /* eslint-disable max-len */
-      this.$services.alerts.success(`${(message.side === 'bid' ? 'Buy' : 'Sell')} Order Created. x${message.data.quantity} @${message.data.price}`);
-    };
-
-    this.$store.state.socket.orderMatched = (message) => {
-      /* eslint-disable max-len */
-      this.$services.alerts.success(`${(message.side === 'bid' ? 'Buy' : 'Sell')} Order Filled. x${message.data.quantity} @${message.data.price}`);
-    };
-  },
 };
 </script>
 
